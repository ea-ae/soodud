# Common config
services:
  client:
    build:
      context: client/
    volumes:
      - clientstatic:/app/dist
  django:
    restart: unless-stopped
    build:
      context: django/
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - main
    volumes:
      - djangostatic:/static
  db:
    image: postgres:14.1-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - main
    volumes:
      - data:/var/lib/postgresql/data/
  nginx:
    restart: unless-stopped
    build:
      context: nginx/
    cap_add:
      - NET_ADMIN
    depends_on:
      - client
    env_file:
      - .env
    networks:
      - main
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginxlog:/var/log
      - fail2ban:/var/lib/fail2ban
      - clientstatic:/static/client:ro
      - djangostatic:/static/django:ro
      - acmechallenge:/var/www/certbot:ro
      - letsencrypt:/etc/letsencrypt:ro
  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    networks:
      - main
    volumes:
      - acmechallenge:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    # command: certonly --register-unsafely-without-email --agree-tos --webroot -w /var/www/certbot/ -d soodud.ee
    # command: certonly -d soodud.ee --dry-run
    command: renew

volumes:
  data:
  nginxlog:
  fail2ban:
  clientstatic:
  djangostatic:
  acmechallenge:
  letsencrypt:
networks:
  main:
    driver: bridge
